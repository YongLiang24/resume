{"version":3,"sources":["ProfilePic.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","cardWidth","console","log","window","innerWidth","this","setState","react_default","a","createElement","className","Card","fluid","centered","raised","id","style","width","Content","Header","Image","src","ProfilePic","avatar","size","position","Description","textAlign","Popup","content","trigger","href","target","rel","extra","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f989354d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ProfilePic.7a0de109.png\";","import React from 'react';\nimport './App.css';\nimport { Card, Image, Popup} from 'semantic-ui-react'\nimport ProfilePic from './ProfilePic.png'\n\nclass App extends React.Component{\n  state={cardWidth: \"100%\"}\n  componentDidMount(){\n    console.log(\"check compoenentdidmount\")\n    if(window.innerWidth < 800){\n      this.setState({cardWidth: \"100%\"})\n    }else{\n      this.setState({cardWidth: \"75%\"})\n    }\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Card fluid centered raised id='main_card' style={{width: this.state.cardWidth}}>\n            {/*title  section*/}\n            <Card.Content>\n              <Card.Header><Image src={ProfilePic} avatar size='huge' position=\"bottom center\"/><span>Yong Liang</span></Card.Header>\n              {/*About section  */}\n              <Card.Description textAlign='center' id=\"contact_info\">510-203-6233 | yongliang24@gmail.com | <Popup content=\"Visit Yong's Github Page\" trigger={<a href=\"https://github.com/YongLiang24\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>}/> | <Popup content=\"Visit Yong's Blog Posts\" trigger={<a href=\"https://dev.to/yongliang24\" target=\"_blank\" rel=\"noopener noreferrer\">Blogs</a>} /> | <Popup trigger={<a href=\"https://yongliang24.github.io/portfolio/\" target=\"_blank\" rel=\"noopener noreferrer\" >Portfolio</a> } content=\"Visit Yong's Portfolio Site\"/> </Card.Description><hr/>\n                <Card.Description textAlign='left' id=\"slogan\">Full stack web developer with a passion for software development and new technologies, with experience in Ruby on Rails, JavaScript, and React.js and a background in software development. I discovered web development through college courses. I bring strong skills in problem solving and team collaborations that support a companyâ€™s success.</Card.Description><br/>\n\n                <Card.Content extra>\n                  <Card.Header id=\"sub_headers\">Technical Projects</Card.Header>\n                </Card.Content><hr/>\n                {/*project 1  */}\n                <Card.Description textAlign='left' className='project_text'><Popup content=\"Visit Metro Pizza Github Repository\" trigger={<strong><a href=\"https://github.com/YongLiang24/frontend_customers_metro_pizza\" target=\"_blank\" rel=\"noopener noreferrer\">Metro Pizza</a></strong>}/> | <Popup trigger={<a href=\"https://yongliang24.github.io/frontend_customers_metro_pizza/\" target=\"_blank\" rel=\"noopener noreferrer\">Demo Link</a>} content=\"Visit Metro Pizza Website\"/></Card.Description>\n                  <Card.Description textAlign='left' className=\"project_detail\">Metro Pizza allows customers to place orders online, a restaurant to receive orders and manage menu items</Card.Description>\n                  <Card.Description textAlign='left' className=\"project_description\">+ Developed a Rails API with endpoints for menu items, admin user, customer orders </Card.Description>\n                  <Card.Description textAlign='left' className=\"project_description\">+ Implemented administrator UI to create or delete menu items, receive online orders in real time\n                  </Card.Description>\n                  <Card.Description textAlign='left' className=\"project_description\">+ Implemented customers UI to view menu, add to cart and place orders online</Card.Description>\n                  <Card.Description textAlign='left' className=\"project_description\">+ Built all user interfaces employing React with Semantic UI</Card.Description>\n                  {/*project 2  */}\n                  <Card.Description textAlign='left' className='project_text'><Popup trigger={<strong><a href=\"https://github.com/YongLiang24/pictionary-online\" target=\"_blank\" rel=\"noopener noreferrer\">Pictionary Online</a></strong>} content=\"Visit Pictionary Github Repository\" /> |<Popup content=\"Visit Pictionary Online Website\" trigger={<a href=\"https://yongliang24.github.io/pictionary-online/#/\" target=\"_blank\" rel=\"noopener noreferrer\">Demo Link</a>}/></Card.Description>\n                    <Card.Description textAlign='left' className=\"project_detail\">Pictionary Online a simple way to play pictionary game online with friends.</Card.Description>\n                    <Card.Description textAlign='left' className=\"project_description\">+ Implemented mouse drawing using HTML canvas</Card.Description>\n                    <Card.Description textAlign='left' className=\"project_description\">+ Developed a Rails API with endpoints for guessing, canvas coordinates\n                    </Card.Description>\n                    <Card.Description textAlign='left' className=\"project_description\">+ Built live update drawing and messages to display drawings and guesses</Card.Description>\n                    <Card.Description textAlign='left' className=\"project_description\">+ Implemented user interface using React and CSS for styling</Card.Description>\n\n                    {/*project 3  */}\n                    <Card.Description textAlign='left' className='project_text'><Popup trigger={<strong><a href=\"https://github.com/YongLiang24/translatr-frontend\" target=\"_blank\" rel=\"noopener noreferrer\">Translatr</a></strong>} content=\"Visit Translatr Github Repository\"/> |<Popup trigger={<a href=\"https://yongliang24.github.io/translatr-frontend/\" target=\"_blank\" rel=\"noopener noreferrer\">Demo Link</a>} content=\"Visit Translatr Website\"/></Card.Description>\n                      <Card.Description textAlign='left' className=\"project_detail\">Translatr a utility to create trips, translate and save common phrases youâ€™ll use for that trip.\n                      </Card.Description>\n                      <Card.Description textAlign='left' className=\"project_description\">+ Utilized Googleâ€™s Translate API to translate userâ€™s inputs in many languages\n                      </Card.Description>\n                      <Card.Description textAlign='left' className=\"project_description\">+ Utilized Foreign Exchange Rate api to implement a currency converter\n                      </Card.Description>\n                      <Card.Description textAlign='left' className=\"project_description\">+ Implemented user interface with normal Javascript, HTML, and CSS</Card.Description>\n                      <Card.Description textAlign='left' className=\"project_description\">+ Developed a Rails API backend with endpoints for translation, trip, and user</Card.Description>\n                    </Card.Content>\n                      {/*Technical skills section  */}\n                      <Card.Content extra>\n                        <Card.Header id=\"sub_headers\">Technical Skills</Card.Header>\n                        <Card.Description textAlign='left' className='project_description'>React, Ruby, Rails, SQL, JavaScript, HTML, CSS, Web Development</Card.Description>\n                      </Card.Content>\n                      {/*work experience  */}\n                      <Card.Content extra>\n                        <Card.Header id=\"sub_headers\">Experience</Card.Header>\n                        <Card.Description textAlign='left' className='work_text'>\n                          <strong>HCL America</strong>, Redmond, WA\n                        </Card.Description>\n                        <Card.Description textAlign='left' className=\"project_detail\">Video Game Tester, July 2017 - December 2018</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Tested games to Identify glitches and bugs</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Documented test procedures, test cases and bug reports</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Collaborated with other team members to complete daily tasks </Card.Description>\n\n                        <Card.Description textAlign='left' className='work_text'>\n                          <strong>Flatiron School - Full-Stack Software Engineering training</strong>, Oct 2018 - May 2019\n                        </Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># 1000 hours of full-stack web development training.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Gained proficiency with Javascript, HTML, CSS, React.js, React Redux, Ruby on Rails.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Understanding Presentation vs Container React Components, client side routing.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Understanding Ajax requests, REST API, async React, props and state management.</Card.Description>\n\n                        <Card.Description textAlign='left' className='work_text'>\n                          <strong>Lake Washington Institute of Technology - Software Developer Student</strong>, Sep 2016 - June 2018\n                        </Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Designed and implemented software applications.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Understanding software testing principles, software development life cycle.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Practiced data management concepts and used query languages.</Card.Description>\n                        <Card.Description textAlign='left' className=\"project_description\"># Demonstrated critical thinking, teamwork, communication, and intercultural appreciation skills </Card.Description>\n                      </Card.Content>\n\n                      <Card.Content extra>\n                        <Card.Header id=\"sub_headers\">Education</Card.Header>\n                        <Card.Description textAlign='left' className='work_text'>\n                          <strong>Flatiron School - Seattle, WA  </strong> - May 2019\n                        </Card.Description>\n                        <Card.Description textAlign='left' className=\"education_description\">+ Full Stack Web Development, Ruby on Rails, JavaScript, and React.js program</Card.Description>\n\n                        <Card.Description textAlign='left' className='work_text'>\n                          <strong>Lake Washington Institute of Technology - Kirkland, WA</strong> - Sep 2016- June 2018\n                        </Card.Description>\n                        <Card.Description textAlign='left' className=\"education_description\">+ Associate Degree in Software Development.</Card.Description>\n                      </Card.Content>\n\n                    </Card>\n                  </header>\n                  </div>\n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}